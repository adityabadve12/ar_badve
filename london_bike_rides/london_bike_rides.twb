<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <_.fcp.GroupActionAddRemove.true...GroupActionAddRemove />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
        <calculation class='tableau' formula='&quot;week&quot;' />
        <members>
          <member value='&quot;day&quot;' />
          <member value='&quot;week&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_output)' inline='true' name='federated.13k0e8s0o8rybi16nytiu19engfs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_output' name='excel-direct.0voyrke0lzyuqk13xfbmg0vbae6q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/aDITYA r bADVE/london_bikes_output.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0voyrke0lzyuqk13xfbmg0vbae6q' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='real_temp_C' ordinal='3' />
            <column datatype='real' name='feels_like_temp_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0voyrke0lzyuqk13xfbmg0vbae6q' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='real_temp_C' ordinal='3' />
            <column datatype='real' name='feels_like_temp_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>real_temp_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[real_temp_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>real_temp_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>feels_like_temp_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[feels_like_temp_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>feels_like_temp_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_52B27D1E559448739791C6459E5A17F4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_1043990726269382660]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ SUM(INT([Calculation_1043990726266863619]) * [count]) }' />
      </column>
      <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
      </column>
      <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_52B27D1E559448739791C6459E5A17F4]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='feels like temp C' datatype='real' name='[feels_like_temp_C]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Temp C ' datatype='integer' name='[real temp C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[real_temp_C]' peg='0' size='2.44' />
      </column>
      <column caption='real temp C' datatype='real' name='[real_temp_C]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1043990726266863619]' derivation='Attribute' name='[attr:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
      <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1043990726263164929]' derivation='Month' name='[mn:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Month' name='[mn:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1043990726266863619]' derivation='None' name='[none:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
      <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1043990726263164929]' derivation='Day-Trunc' name='[tdy:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Day-Trunc' name='[tdy:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
      <group caption='Moving average period Set' name='[Moving average period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2015-12-20#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2015-12-27#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-01-03#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-01-10#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-01-17#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-01-24#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-01-31#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-02-07#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-02-14#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-02-21#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-02-28#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-03-06#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-03-13#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-03-20#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-03-27#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-04-03#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-04-10#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-04-17#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-04-24#' />
          <groupfilter function='member' level='[Calculation_1043990726261481472]' member='#2016-05-01#' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))' hidden='true' name='[Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
          <groupfilter function='level-members' level='[tdy:Calculation_1043990726263164929:ok]' />
          <groupfilter function='level-members' level='[tdy:Min Month (copy)_1043990726263971842:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))' hidden='true' name='[Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
          <groupfilter function='level-members' level='[mn:Calculation_1043990726263164929:ok]' />
          <groupfilter function='level-members' level='[mn:Min Month (copy)_1043990726263971842:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))' hidden='true' name='[Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
          <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
          <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )' hidden='true' name='[Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
          <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
          <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
          <groupfilter function='level-members' level='[real temp C (bin)]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1043990726266863619:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Calculation_1043990726266863619:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:time:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:weather:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Clear&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rain&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cloudy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowfall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broken clouds&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scattered clouds&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
        </column>
        <column caption='Moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_52B27D1E559448739791C6459E5A17F4'>
            <properties context=''>
              <relation connection='excel-direct.0voyrke0lzyuqk13xfbmg0vbae6q' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='real_temp_C' ordinal='3' />
                  <column datatype='real' name='feels_like_temp_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_7F89791EBFD942188171E0D861C621AD]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Moving Average' />
      <_.fcp.GroupActionAddRemove.true...add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.13k0e8s0o8rybi16nytiu19engfs].[Moving average period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Heatmap'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00aa00'>Temperature vs wind speed </run>
            <run bold='true' fontcolor='#00aa00' fontsize='10'><![CDATA[between <[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]> and <[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
            <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726266863619]' derivation='None' name='[none:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[real temp C (bin)]' derivation='None' name='[none:real temp C (bin):ok]' pivot='key' type='ordinal' />
            <column aggregation='None' caption='Temp C ' datatype='integer' name='[real temp C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[real_temp_C]' peg='0' size='2.44' />
            </column>
            <column caption='real temp C' datatype='real' name='[real_temp_C]' role='measure' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]'>
            <groupfilter function='member' level='[none:Calculation_1043990726266863619:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:real temp C (bin):ok]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Wind Speed Kph (bin):ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e5dce4</color>
                <color>#d9c9d8</color>
                <color>#cdb6cc</color>
                <color>#c2a4c0</color>
                <color>#b693b4</color>
                <color>#aa83a8</color>
                <color>#9f749c</color>
                <color>#936690</color>
                <color>#875984</color>
                <color>#7c4d79</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='stroke-color' id='refline4' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' />
              <text column='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#00aa00'><![CDATA[Temp C :	<[federated.13k0e8s0o8rybi16nytiu19engfs].[none:real temp C (bin):ok]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#00aa00'><![CDATA[Wind Kph:	<[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Wind Speed Kph (bin):ok]>]]></run>
                <run><![CDATA[

<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">

<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">
]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:real temp C (bin):ok]</rows>
        <cols>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Wind Speed Kph (bin)]</column>
          <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[real temp C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{698D6472-7D22-4AD7-BD68-50CDFF5AFC5E}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
            <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Month' name='[mn:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Month' name='[mn:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1043990726266863619]' derivation='None' name='[none:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Temp C ' datatype='integer' name='[real temp C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[real_temp_C]' peg='0' size='2.44' />
            </column>
            <column caption='real temp C' datatype='real' name='[real_temp_C]' role='measure' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Day-Trunc' name='[tdy:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Day-Trunc' name='[tdy:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[tdy:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[tdy:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[mn:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[mn:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Hour]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[real temp C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]'>
            <groupfilter function='member' level='[none:Calculation_1043990726266863619:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='stroke-color' id='refline4' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13k0e8s0o8rybi16nytiu19engfs].[hr:time:ok]' />
              <text column='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13k0e8s0o8rybi16nytiu19engfs].[hr:time:ok]</rows>
        <cols>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{BD5F08F7-0384-4983-B549-10F774351BFE}' />
    </worksheet>
    <worksheet name='Moving Average'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00aa00'>&lt;</run>
            <run bold='true' fontcolor='#00aa00'>[Parameters].[Parameter 2]</run>
            <run bold='true' fontcolor='#00aa00'>&gt; &lt;</run>
            <run bold='true' fontcolor='#00aa00'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#00aa00'>&gt; moving average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
            <column caption='Moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation2]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column-instance column='[Calculation_1043990726266863619]' derivation='Attribute' name='[attr:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Month' name='[mn:Calculation_1043990726263164929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Month' name='[mn:Min Month (copy)_1043990726263971842:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1043990726261481472]' derivation='None' name='[none:Calculation_1043990726261481472:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' included-values='all' />
          <slices>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' scope='cols' value='' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='stroke-color' id='refline4' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
            <format attr='line-visibility' id='refline6' value='on' />
            <format attr='line-pattern-only' id='refline6' value='dotted' />
            <format attr='fill-color' id='refline8' value='#ffffff' />
            <format attr='line-visibility' id='refline8' value='on' />
            <format attr='line-pattern-only' id='refline8' value='dotted' />
            <format attr='stroke-color' id='refline8' value='#00aa00' />
            <format attr='line-visibility' id='refline10' value='on' />
            <format attr='line-pattern-only' id='refline10' value='dotted' />
            <format attr='stroke-color' id='refline10' value='#00aa00' />
            <format attr='fill-color' id='refline10' value='#c0c0c0' />
            <format attr='line-visibility' id='refline12' value='on' />
            <format attr='line-pattern-only' id='refline12' value='dotted' />
            <format attr='stroke-color' id='refline12' value='#00aa00' />
            <format attr='fill-color' id='refline12' value='#e6e6e6' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='color' value='#00aa00' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#00aa00' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13k0e8s0o8rybi16nytiu19engfs].[attr:Calculation_1043990726266863619:nk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[mn:Calculation_1043990726263164929:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[mn:Min Month (copy)_1043990726263971842:qk]' />
            </encodings>
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline0' label-type='automatic' paired-id='refline1' scope='per-table' symmetric='false' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='1' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-table' symmetric='false' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='2' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline10' label-type='none' paired-id='refline11' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='11' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline11' label-type='none' paired-id='refline10' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='12' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline12' label-type='none' paired-id='refline13' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='13' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline13' label-type='none' paired-id='refline12' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='14' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='false' formula='min' id='refline14' label-type='none' paired-id='refline15' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='15' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='false' formula='max' id='refline15' label-type='none' paired-id='refline14' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='16' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='false' formula='min' id='refline2' label-type='none' paired-id='refline3' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='3' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='false' formula='max' id='refline3' label-type='none' paired-id='refline2' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='4' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline4' label-type='none' paired-id='refline5' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='5' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline5' label-type='none' paired-id='refline4' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='6' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline6' label-type='none' paired-id='refline7' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='7' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline7' label-type='none' paired-id='refline6' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='8' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='min' id='refline8' label-type='none' paired-id='refline9' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='9' />
            <reference-line axis-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' enable-instant-analytics='true' formula='max' id='refline9' label-type='none' paired-id='refline8' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' z-order='10' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#00aa00'><![CDATA[Date:	<[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#00aa00'><![CDATA[Moving Average Rides:	<[federated.13k0e8s0o8rybi16nytiu19engfs].[usr:Calculation2:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Weather" maxwidth="300" maxheight="200" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Hour" maxwidth="300" maxheight="400" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13k0e8s0o8rybi16nytiu19engfs].[usr:Calculation2:qk]</rows>
        <cols>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]</cols>
      </table>
      <simple-id uuid='{38EC5E4C-5433-4FCD-9A59-B0C9E34A39A6}' />
    </worksheet>
    <worksheet name='Total Rides'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#00aa00'>London Bike Rides</run>
            <run>Æ&#10;</run>
            <run fontcolor='#00aa00' fontsize='11'><![CDATA[between <[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]> and <[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
            <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_1043990726269382660]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ SUM(INT([Calculation_1043990726266863619]) * [count]) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726266863619]' derivation='None' name='[none:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1043990726269382660]' derivation='Sum' name='[sum:Calculation_1043990726269382660:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]'>
            <groupfilter function='member' level='[none:Calculation_1043990726266863619:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='stroke-color' id='refline4' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:Calculation_1043990726269382660:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#00aa00' fontsize='28'>&lt;</run>
                <run bold='true' fontcolor='#00aa00' fontsize='28'>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:Calculation_1043990726269382660:qk]</run>
                <run bold='true' fontcolor='#00aa00' fontsize='28'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0A87CC7E-793C-4E80-9C46-A6BDEC5B2AFC}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
              <calculation class='tableau' formula='&quot;week&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
            <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_1043990726263164929]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_1043990726266863619]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_1043990726261481472] &gt;= [Calculation_1043990726263164929]&#13;&#10;AND&#13;&#10;[Calculation_1043990726261481472] &lt;= [Min Month (copy)_1043990726263971842]' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_1043990726263971842]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF [Moving average period Set]THEN [Calculation_1043990726261481472]END)}' />
            </column>
            <column aggregation='None' caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Month' name='[mn:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Month' name='[mn:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1043990726266863619]' derivation='None' name='[none:Calculation_1043990726266863619:nk]' pivot='key' type='nominal' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column aggregation='None' caption='Temp C ' datatype='integer' name='[real temp C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[real_temp_C]' peg='0' size='2.44' />
            </column>
            <column caption='real temp C' datatype='real' name='[real_temp_C]' role='measure' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Day-Trunc' name='[tdy:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Day-Trunc' name='[tdy:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1043990726263164929]' derivation='Year' name='[yr:Calculation_1043990726263164929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Min Month (copy)_1043990726263971842]' derivation='Year' name='[yr:Min Month (copy)_1043990726263971842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[tdy:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[tdy:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[mn:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[mn:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1043990726261481472]' />
              <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Weather]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Calculation_1043990726263164929:ok]' />
              <groupfilter function='level-members' level='[yr:Min Month (copy)_1043990726263971842:ok]' />
              <groupfilter function='level-members' level='[Wind Speed Kph (bin)]' />
              <groupfilter function='level-members' level='[real temp C (bin)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]'>
            <groupfilter function='member' level='[none:Calculation_1043990726266863619:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:weather:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clear&quot;</bucket>
              <bucket>&quot;Scattered clouds&quot;</bucket>
              <bucket>&quot;Broken clouds&quot;</bucket>
              <bucket>&quot;Cloudy&quot;</bucket>
              <bucket>&quot;Rain&quot;</bucket>
              <bucket>&quot;Rain with thunderstorm&quot;</bucket>
              <bucket>&quot;Snowfall&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,YEAR(Min Month),YEAR(Max Month ))]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (YEAR(Min Month),YEAR(Max Month ),Wind Kph,Temp C )]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,DAY(Min Month),DAY(Max Month ))]</column>
            <column>[federated.13k0e8s0o8rybi16nytiu19engfs].[Tooltip (Moving average period,MONTH(Min Month),MONTH(Max Month ))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline2' value='#e6e6e6' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline4' value='on' />
            <format attr='line-pattern-only' id='refline4' value='dotted' />
            <format attr='stroke-color' id='refline4' value='#00aa00' />
            <format attr='fill-color' id='refline4' value='#f5f5f5' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:weather:nk]' />
              <text column='[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:qk]' />
              <lod column='[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:weather:nk]</rows>
        <cols>[federated.13k0e8s0o8rybi16nytiu19engfs].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{D93245D3-F5DA-4523-B7C3-C2C3BA788C71}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#00aa00' />
          <format attr='font-weight' value='bold' />
          <format attr='border-color' value='#00aa00' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#00aa00' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='Data (london_bikes_output)' name='federated.13k0e8s0o8rybi16nytiu19engfs' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;week&quot;'>
          <calculation class='tableau' formula='&quot;week&quot;' />
          <members>
            <member value='&quot;day&quot;' />
            <member value='&quot;week&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
        <column caption='Moving average duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.13k0e8s0o8rybi16nytiu19engfs'>
        <column caption='Moving average period' datatype='date' datatype-customized='true' name='[Calculation_1043990726261481472]' role='dimension' type='ordinal'>
          <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
        </column>
        <column-instance column='[Calculation_1043990726261481472]' derivation='None' name='[none:Calculation_1043990726261481472:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='15' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='48958' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='48958' id='6' type-v2='layout-basic' w='98828' x='586' y='1042'>
                  <zone h='48958' id='3' name='Total Rides' w='21961' x='586' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48958' id='5' name='Moving Average' w='76867' x='22547' y='1042'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='48958' id='11' name='Heatmap' w='98828' x='586' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6250' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='12958' x='57980' y='1953' />
        <zone h='6250' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12152' x='71449' y='1823' />
        <zone h='6510' id='12' type-v2='text' w='12811' x='44143' y='1823'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#00aa00'>Drag and hold to select</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#00aa00'> time period on timeline</run>
          </formatted-text>
        </zone>
        <zone h='8073' id='16' name='Moving Average' param='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' type-v2='filter' values='database' w='12299' x='86676' y='260' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='17' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='48958' id='3' is-fixed='true' name='Total Rides' w='21961' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8073' id='16' name='Moving Average' param='[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]' type-v2='filter' values='database' w='12299' x='86676' y='260'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='5' is-fixed='true' name='Moving Average' w='76867' x='22547' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6510' id='12' type-v2='text' w='12811' x='44143' y='1823'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#00aa00'>Drag and hold to select</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#00aa00'> time period on timeline</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='10' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12152' x='71449' y='1823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='9' mode='type_in' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='12958' x='57980' y='1953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='11' is-fixed='true' name='Heatmap' w='98828' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{47B23F29-21DA-449B-935E-4FADB038BB15}' />
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='Moving Average'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[attr:Calculation_1043990726266863619:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726261481472:qk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726261481472:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{573C7D09-6861-4BC6-A2CC-5D6D20547C8A}' />
    </window>
    <window class='worksheet' name='Total Rides'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FD6CF10-31EE-4BF3-A1CE-73A714BF507B}' />
    </window>
    <window class='worksheet' name='Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:real temp C (bin):ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3E9CA427-0633-4175-92C4-E684454E17B6}' />
    </window>
    <window class='worksheet' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:weather:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{456C5F85-989C-4CCA-91CE-F2E777F2F78D}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[hr:time:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[none:Calculation_1043990726266863619:nk]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Calculation_1043990726263164929:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:Min Month (copy)_1043990726263971842:ok]</field>
            <field>[federated.13k0e8s0o8rybi16nytiu19engfs].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C490BEF0-EF12-492C-B9F7-A1A7EE93D5D3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Heatmap'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Moving Average'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Rides'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{860BF368-DEB3-450C-BD93-FF6D984DDC08}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Heatmap' width='192'>
      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
      dDaJ0xVAREOtGHgdMst7hxTzB+xncnzn9o9oC/lxuIPs7i1jcwVpidUdF/uUooJpQqw9jtMh
      4m+MU1EqBOsDmFoFX10YS1PwxKNkVzY42CsgWAYOrwfLMMhlNCRLJZ85Ev0chUACjX0teNw2
      Ai317IzNcrBXwKzoeMJ+zEoFdyyKWchjczkoZQuoqgVGha3pTaIdDWR3D8inSydDILWIZlhE
      w/UYWpGGhk5W1iaxySKru7u0NLSyvbeK0x0il93H4XBjd3rxOF4ui9Q0hWShRF9rI6u7B7gc
      DlY3Z+lr72NicZaO1ksIhoov0IBS2Ee0u7Hb3ficR+Ht8yHQ1cs3cdtkvB4HqUwer8/P9Owk
      DlFndTfBpZ5LlEslQsEINi1LQ8/rhNxPxUgnQiBdYXppCUF28v7v/CHtsSAOr5fRial/ghlh
      2189IyxfyOPzns25lKJCbj936s9NXaVsiHi+QpX1LLmDLPlE/tSfV7QyluTE/lXa5GfIHKRP
      tELYnLaXzjQ77fvPkzxMnqgE210OtPKLov7Tvv88bX3tOJyn63pLSgm38+WqrOc5SyX4PPYc
      HgeNfU2n/z1Tp6RW8LjONq9alEVs9tPXgaGVUHF++4qwsy7+syDKDjxVPCOb/fzDwZ/ltEV+
      lsX/Mk5b5GdZ/GfhrIv127AniDKel0yq/LpIdjduamnQGhecmgPUuNDUHKDGhabmADUuNDUH
      qHGh+WazQIKAzV29CeRHadDsqz94RpK7STL7marZizXHcHqqN+cqk85UdYTT4uRC1UQsgiDQ
      +1pfVWwBUIL0Vqpq5mxOG44z3IuLrQj7Bqj6+V6sy/dPTi0EqnGhqTlAjQtNzQFqXGhqDlDj
      QlNzgBoXmucGZGiMDg0zt7BMY1sbRinD6Ng4puQi4D1/Y5NlWajKyUat5PYKD4ZGcXjD+D1O
      VuYnmV7eIuR3MvD4MaLdzcz4AOOzy7R3tCOJT9MgalE90Q2aTe8xs75ONBTlYHeRlCoS9LjY
      3Fpgfm0FjyfAwvIUiiVTyu6zsLVNPBI73pK9XCijFBXsXg8+vwPlSWt0sCmOWS5iWCJNvfXk
      k0cilmBjDLdbRrdE4q1RlEKZaEcDgqGhqQYev+e4A1EpZRifn2I7mcZmKcxvbhAJxZAwmF+Z
      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
      LnH009WtRKkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Moving Average' width='192'>
      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
      P5M6/7jq43iMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='69' name='Total Rides' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABFCAYAAAAcoelsAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAURUlEQVR4nO2cfViUVdrAfyGkTIqjiIDIhwSGIBl+Ia4f+RWIKbbmorW25qtQaRvurr4V
      22Zdq5ur74Kb5YK7lm1+ZeZXiRq4q5mgQqgoIiAKhICgoOAwyTjuHxoyZ2aYZ4aZTd95ftfl
      ddXNM885zzn3fc59zrnP/dDt27dvIyNjpzj81BWQkfkpkQ1Axq6RDUDGrpENQMaukQ1Axq6R
      DUDGrpENQMaukQ1Axq6RDUDGrpENQMaukQ1Axq6RDUDGrpENQMaukQ1Axq6RDUDGrpENQMau
      kQ1Axq6RDUDGrpENQMaukQ1Axq6RDUDGrpENQMaukQ1Axq6RDUDGrpENQMaucbTNazU0qgvJ
      vbSftNqjHK05QVlzGcXNqnuPdPAmqKMHAd1jmOIbRZTbALyd2lsdDY3XMtlU9jG7Ko5QoG5d
      pgL3Tj6EKJ9hsu80pnlaozwroG2ksGYTW0t2sfPqSYpU5dT/+LcO3gR1DOQJz8lM9nqK6B7B
      KDu0t0A1lVf2sqV0C7srszmgKr4jdnAnoJMPQVbtj3bUUpXD3ovb2HJpO9mN+v3o02U4Mb1i
      ifIazoBHOlusyA9ZMzWiWpXDtnNLWFl6gBOtlV0SSob2Xk5y2BwiOpn7ORpqLq/mtePvsElV
      b/rxdpdnBbQ1ZBa8xryCTZy5JfVHSkLcXmHF0KVMVJhboJqS0tf5Ve5aDkvqGwXuyudYNvAv
      zHHtYm5hFqNu2M7rWS+ztr4aqRqkcBrBcyF/5S+BYUiuqbaGzIJXrGcAF89NIORUuuRKG8Uh
      kNkD01nbx0eaVWvL2JI1njkVRZaV7RDGooh9LOvlZqvpUA/NjS3M+9ccPm6yrLXiIm6T0tuM
      H9w8xrJvIkm8KnVwuEdESBFHggPM/p351HEs7xdEFqRjfi2BrkkUPZWApJrePMY7B8ewpF5l
      vTWA5taN9is/gLaIj7NHMf/7OgnPFpCc0Y8Zlio/gDaXFd8OkVaeFVDXrWTc3hkWK7+5aNS7
      iN8bbpHy/9fQ1rArK4xwS5XfrLIKSL6r/GCzNQDg4M4TrrH8ymcSI90ex7dTD3q0+JQaGtW1
      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
      7BrZAGTsmv8AP/ecU45WtDcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
